[2022-02-25 03:09:22,838] {processor.py:163} INFO - Started process (PID=11409) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:09:22,845] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:09:22,846] {logging_mixin.py:109} INFO - [2022-02-25 03:09:22,846] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:09:22,885] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:09:33,394] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:09:34,008] {logging_mixin.py:109} INFO - [2022-02-25 03:09:34,007] {manager.py:496} INFO - Created Permission View: can read on DAG:Spotify_Song_dag
[2022-02-25 03:09:34,016] {logging_mixin.py:109} INFO - [2022-02-25 03:09:34,015] {manager.py:496} INFO - Created Permission View: can edit on DAG:Spotify_Song_dag
[2022-02-25 03:09:34,016] {logging_mixin.py:109} INFO - [2022-02-25 03:09:34,016] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:09:34,024] {logging_mixin.py:109} INFO - [2022-02-25 03:09:34,023] {dag.py:2417} INFO - Creating ORM DAG for Spotify_Song_dag
[2022-02-25 03:09:34,029] {logging_mixin.py:109} INFO - [2022-02-25 03:09:34,029] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:09:19.029231+00:00
[2022-02-25 03:09:34,042] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 11.205 seconds
[2022-02-25 03:10:10,195] {processor.py:163} INFO - Started process (PID=11423) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:10,197] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:10:10,198] {logging_mixin.py:109} INFO - [2022-02-25 03:10:10,198] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:10,272] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:10:11,635] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:11,700] {logging_mixin.py:109} INFO - [2022-02-25 03:10:11,699] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:10:11,730] {logging_mixin.py:109} INFO - [2022-02-25 03:10:11,730] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:09:56.729828+00:00
[2022-02-25 03:10:11,758] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.564 seconds
[2022-02-25 03:10:55,399] {processor.py:163} INFO - Started process (PID=11440) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:55,401] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:10:55,402] {logging_mixin.py:109} INFO - [2022-02-25 03:10:55,402] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:55,432] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:10:56,653] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:10:56,679] {logging_mixin.py:109} INFO - [2022-02-25 03:10:56,679] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:10:56,701] {logging_mixin.py:109} INFO - [2022-02-25 03:10:56,701] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:10:41.701462+00:00
[2022-02-25 03:10:56,712] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.325 seconds
[2022-02-25 03:11:31,949] {processor.py:163} INFO - Started process (PID=11461) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:11:31,949] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:11:31,950] {logging_mixin.py:109} INFO - [2022-02-25 03:11:31,950] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:11:31,973] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:11:32,819] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:11:32,847] {logging_mixin.py:109} INFO - [2022-02-25 03:11:32,847] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:11:32,864] {logging_mixin.py:109} INFO - [2022-02-25 03:11:32,863] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:11:17.863798+00:00
[2022-02-25 03:11:32,882] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.935 seconds
[2022-02-25 03:12:07,480] {processor.py:163} INFO - Started process (PID=11507) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:07,481] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:12:07,483] {logging_mixin.py:109} INFO - [2022-02-25 03:12:07,483] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:07,516] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:12:08,273] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:08,328] {logging_mixin.py:109} INFO - [2022-02-25 03:12:08,328] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:12:08,373] {logging_mixin.py:109} INFO - [2022-02-25 03:12:08,373] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:11:53.369459+00:00
[2022-02-25 03:12:08,417] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.938 seconds
[2022-02-25 03:12:52,163] {processor.py:163} INFO - Started process (PID=11572) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:52,164] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:12:52,165] {logging_mixin.py:109} INFO - [2022-02-25 03:12:52,165] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:52,188] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:12:53,015] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:12:53,041] {logging_mixin.py:109} INFO - [2022-02-25 03:12:53,040] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:12:53,055] {logging_mixin.py:109} INFO - [2022-02-25 03:12:53,055] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:12:38.055233+00:00
[2022-02-25 03:12:53,068] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.906 seconds
[2022-02-25 03:13:40,503] {processor.py:163} INFO - Started process (PID=11616) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:13:40,504] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:13:40,504] {logging_mixin.py:109} INFO - [2022-02-25 03:13:40,504] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:13:40,529] {logging_mixin.py:109} INFO - [2022-02-25 03:13:40,528] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:13:40,562] {processor.py:690} INFO - Deactivated 1 DAGs which are no longer present in /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:13:40,562] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:13:40,567] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.064 seconds
[2022-02-25 03:14:13,138] {processor.py:163} INFO - Started process (PID=11632) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:13,139] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:14:13,140] {logging_mixin.py:109} INFO - [2022-02-25 03:14:13,139] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:13,164] {logging_mixin.py:109} INFO - [2022-02-25 03:14:13,162] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:14:13,195] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:13,202] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.065 seconds
[2022-02-25 03:14:47,571] {processor.py:163} INFO - Started process (PID=11638) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:47,577] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:14:47,582] {logging_mixin.py:109} INFO - [2022-02-25 03:14:47,582] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:47,648] {logging_mixin.py:109} INFO - [2022-02-25 03:14:47,647] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:14:47,733] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:14:47,813] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.243 seconds
[2022-02-25 03:15:21,896] {processor.py:163} INFO - Started process (PID=11659) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:21,897] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:15:21,898] {logging_mixin.py:109} INFO - [2022-02-25 03:15:21,898] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:21,942] {logging_mixin.py:109} INFO - [2022-02-25 03:15:21,940] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:15:21,999] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:22,010] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.114 seconds
[2022-02-25 03:15:54,630] {processor.py:163} INFO - Started process (PID=11662) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:54,630] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:15:54,631] {logging_mixin.py:109} INFO - [2022-02-25 03:15:54,631] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:54,656] {logging_mixin.py:109} INFO - [2022-02-25 03:15:54,654] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:15:54,680] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:15:54,684] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.055 seconds
[2022-02-25 03:16:27,115] {processor.py:163} INFO - Started process (PID=11665) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:16:27,115] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:16:27,116] {logging_mixin.py:109} INFO - [2022-02-25 03:16:27,116] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:16:27,137] {logging_mixin.py:109} INFO - [2022-02-25 03:16:27,135] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:16:27,168] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:16:27,173] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.059 seconds
[2022-02-25 03:17:03,395] {processor.py:163} INFO - Started process (PID=11668) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:03,396] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:17:03,397] {logging_mixin.py:109} INFO - [2022-02-25 03:17:03,397] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:03,496] {logging_mixin.py:109} INFO - [2022-02-25 03:17:03,494] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:17:03,605] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:03,611] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.217 seconds
[2022-02-25 03:17:40,694] {processor.py:163} INFO - Started process (PID=11673) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:40,696] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:17:40,696] {logging_mixin.py:109} INFO - [2022-02-25 03:17:40,696] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:40,743] {logging_mixin.py:109} INFO - [2022-02-25 03:17:40,741] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:17:40,824] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:17:40,838] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.149 seconds
[2022-02-25 03:18:18,728] {processor.py:163} INFO - Started process (PID=11679) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:18,729] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:18:18,735] {logging_mixin.py:109} INFO - [2022-02-25 03:18:18,735] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:18,780] {logging_mixin.py:109} INFO - [2022-02-25 03:18:18,778] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    from google_sheet_api import update_data_to_sheet
ModuleNotFoundError: No module named 'google_sheet_api'
[2022-02-25 03:18:18,878] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:18,895] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.168 seconds
[2022-02-25 03:18:31,053] {processor.py:163} INFO - Started process (PID=11681) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:31,054] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:18:31,055] {logging_mixin.py:109} INFO - [2022-02-25 03:18:31,055] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:31,083] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:18:33,439] {logging_mixin.py:109} INFO - [2022-02-25 03:18:33,435] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 178, in <module>
    sheet_run = PythonOperator(
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 188, in apply_defaults
    result = func(self, *args, **kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/operators/python.py", line 158, in __init__
    super().__init__(**kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 188, in apply_defaults
    result = func(self, *args, **kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 553, in __init__
    task_group.add(self)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/utils/task_group.py", line 175, in add
    raise DuplicateTaskIdFound(f"Task id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'spotify_etl' has already been added to the DAG
[2022-02-25 03:18:33,490] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:18:33,506] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.454 seconds
[2022-02-25 03:19:07,815] {processor.py:163} INFO - Started process (PID=11685) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:07,817] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:19:07,818] {logging_mixin.py:109} INFO - [2022-02-25 03:19:07,817] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:07,848] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:19:09,197] {logging_mixin.py:109} INFO - [2022-02-25 03:19:09,192] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 178, in <module>
    sheet_run = PythonOperator(
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 188, in apply_defaults
    result = func(self, *args, **kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/operators/python.py", line 158, in __init__
    super().__init__(**kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 188, in apply_defaults
    result = func(self, *args, **kwargs)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/baseoperator.py", line 553, in __init__
    task_group.add(self)
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/utils/task_group.py", line 175, in add
    raise DuplicateTaskIdFound(f"Task id '{key}' has already been added to the DAG")
airflow.exceptions.DuplicateTaskIdFound: Task id 'spotify_etl' has already been added to the DAG
[2022-02-25 03:19:09,262] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:09,281] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.465 seconds
[2022-02-25 03:19:35,853] {processor.py:163} INFO - Started process (PID=11689) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:35,854] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:19:35,857] {logging_mixin.py:109} INFO - [2022-02-25 03:19:35,857] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:36,112] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:19:37,431] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:19:38,252] {logging_mixin.py:109} INFO - [2022-02-25 03:19:38,252] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:19:38,321] {logging_mixin.py:109} INFO - [2022-02-25 03:19:38,321] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:19:23.320624+00:00
[2022-02-25 03:19:38,392] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.540 seconds
[2022-02-25 03:20:14,741] {processor.py:163} INFO - Started process (PID=11703) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:20:14,742] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:20:14,743] {logging_mixin.py:109} INFO - [2022-02-25 03:20:14,743] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:20:14,764] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:20:15,546] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:20:15,569] {logging_mixin.py:109} INFO - [2022-02-25 03:20:15,569] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:20:15,581] {logging_mixin.py:109} INFO - [2022-02-25 03:20:15,581] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:20:00.581417+00:00
[2022-02-25 03:20:15,591] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.851 seconds
[2022-02-25 03:21:08,853] {processor.py:163} INFO - Started process (PID=11728) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:08,854] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:21:08,858] {logging_mixin.py:109} INFO - [2022-02-25 03:21:08,858] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:08,877] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:21:09,660] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:09,694] {logging_mixin.py:109} INFO - [2022-02-25 03:21:09,694] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:21:09,711] {logging_mixin.py:109} INFO - [2022-02-25 03:21:09,711] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:20:54.711270+00:00
[2022-02-25 03:21:09,732] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.879 seconds
[2022-02-25 03:21:46,605] {processor.py:163} INFO - Started process (PID=11738) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:46,606] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:21:46,606] {logging_mixin.py:109} INFO - [2022-02-25 03:21:46,606] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:46,630] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:21:47,391] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:21:47,423] {logging_mixin.py:109} INFO - [2022-02-25 03:21:47,422] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:21:47,441] {logging_mixin.py:109} INFO - [2022-02-25 03:21:47,441] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:21:32.441036+00:00
[2022-02-25 03:21:47,453] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.849 seconds
[2022-02-25 03:22:24,061] {processor.py:163} INFO - Started process (PID=11750) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:22:24,062] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:22:24,062] {logging_mixin.py:109} INFO - [2022-02-25 03:22:24,062] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:22:24,084] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:22:24,880] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:22:24,911] {logging_mixin.py:109} INFO - [2022-02-25 03:22:24,910] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:22:24,928] {logging_mixin.py:109} INFO - [2022-02-25 03:22:24,928] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:22:09.928376+00:00
[2022-02-25 03:22:24,941] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.881 seconds
[2022-02-25 03:23:05,889] {processor.py:163} INFO - Started process (PID=11763) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:05,890] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:23:05,891] {logging_mixin.py:109} INFO - [2022-02-25 03:23:05,891] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:05,914] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:23:06,841] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:06,867] {logging_mixin.py:109} INFO - [2022-02-25 03:23:06,867] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:23:06,882] {logging_mixin.py:109} INFO - [2022-02-25 03:23:06,882] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:22:51.882149+00:00
[2022-02-25 03:23:06,894] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.006 seconds
[2022-02-25 03:23:47,315] {processor.py:163} INFO - Started process (PID=11780) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:47,316] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:23:47,316] {logging_mixin.py:109} INFO - [2022-02-25 03:23:47,316] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:47,330] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:23:47,856] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:23:47,876] {logging_mixin.py:109} INFO - [2022-02-25 03:23:47,875] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:23:47,885] {logging_mixin.py:109} INFO - [2022-02-25 03:23:47,885] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:23:32.885150+00:00
[2022-02-25 03:23:47,904] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.589 seconds
[2022-02-25 03:24:30,005] {processor.py:163} INFO - Started process (PID=11806) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:24:30,006] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:24:30,006] {logging_mixin.py:109} INFO - [2022-02-25 03:24:30,006] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:24:30,020] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:24:30,766] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:24:30,786] {logging_mixin.py:109} INFO - [2022-02-25 03:24:30,785] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:24:30,797] {logging_mixin.py:109} INFO - [2022-02-25 03:24:30,797] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:24:15.797706+00:00
[2022-02-25 03:24:30,805] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.800 seconds
[2022-02-25 03:25:11,976] {processor.py:163} INFO - Started process (PID=11833) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:11,977] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:25:11,977] {logging_mixin.py:109} INFO - [2022-02-25 03:25:11,977] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:11,996] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:25:12,754] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:12,783] {logging_mixin.py:109} INFO - [2022-02-25 03:25:12,783] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:25:12,801] {logging_mixin.py:109} INFO - [2022-02-25 03:25:12,801] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:24:57.801504+00:00
[2022-02-25 03:25:12,822] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.847 seconds
[2022-02-25 03:25:54,625] {processor.py:163} INFO - Started process (PID=11847) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:54,626] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:25:54,627] {logging_mixin.py:109} INFO - [2022-02-25 03:25:54,627] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:54,652] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:25:55,581] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:25:55,612] {logging_mixin.py:109} INFO - [2022-02-25 03:25:55,612] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:25:55,627] {logging_mixin.py:109} INFO - [2022-02-25 03:25:55,627] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:25:40.627196+00:00
[2022-02-25 03:25:55,648] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.024 seconds
[2022-02-25 03:26:58,802] {processor.py:163} INFO - Started process (PID=11883) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:26:58,803] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:26:58,804] {logging_mixin.py:109} INFO - [2022-02-25 03:26:58,804] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:26:58,829] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:27:00,579] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:27:00,634] {logging_mixin.py:109} INFO - [2022-02-25 03:27:00,634] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:27:00,655] {logging_mixin.py:109} INFO - [2022-02-25 03:27:00,655] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:26:45.654504+00:00
[2022-02-25 03:27:00,677] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.876 seconds
[2022-02-25 03:27:42,240] {processor.py:163} INFO - Started process (PID=11904) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:27:42,242] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:27:42,242] {logging_mixin.py:109} INFO - [2022-02-25 03:27:42,242] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:27:42,307] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:27:44,700] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:27:44,788] {logging_mixin.py:109} INFO - [2022-02-25 03:27:44,783] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:27:45,100] {logging_mixin.py:109} INFO - [2022-02-25 03:27:45,100] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:27:30.100198+00:00
[2022-02-25 03:27:45,163] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.925 seconds
[2022-02-25 03:28:37,201] {processor.py:163} INFO - Started process (PID=11925) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:28:37,201] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:28:37,202] {logging_mixin.py:109} INFO - [2022-02-25 03:28:37,202] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:28:37,222] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:28:37,987] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:28:38,016] {logging_mixin.py:109} INFO - [2022-02-25 03:28:38,016] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:28:38,026] {logging_mixin.py:109} INFO - [2022-02-25 03:28:38,026] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:28:23.026410+00:00
[2022-02-25 03:28:38,034] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.835 seconds
[2022-02-25 03:29:06,873] {processor.py:163} INFO - Started process (PID=11938) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:06,874] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:29:06,875] {logging_mixin.py:109} INFO - [2022-02-25 03:29:06,874] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:06,891] {logging_mixin.py:109} INFO - [2022-02-25 03:29:06,890] {dagbag.py:334} ERROR - Failed to import: /Users/user/oneplace/dags/spotify_check_dag.py
Traceback (most recent call last):
  File "/Users/user/oneplace/opVM/lib/python3.9/site-packages/airflow/models/dagbag.py", line 331, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 790, in exec_module
  File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
  File "/Users/user/oneplace/dags/spotify_check_dag.py", line 7, in <module>
    cr = open('cr.json')
FileNotFoundError: [Errno 2] No such file or directory: 'cr.json'
[2022-02-25 03:29:06,920] {processor.py:690} INFO - Deactivated 1 DAGs which are no longer present in /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:06,921] {processor.py:656} WARNING - No viable dags retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:06,925] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.053 seconds
[2022-02-25 03:29:19,564] {processor.py:163} INFO - Started process (PID=11947) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:19,565] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:29:19,565] {logging_mixin.py:109} INFO - [2022-02-25 03:29:19,565] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:19,581] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:29:20,524] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:29:20,550] {logging_mixin.py:109} INFO - [2022-02-25 03:29:20,550] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:29:20,560] {logging_mixin.py:109} INFO - [2022-02-25 03:29:20,560] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:29:05.559892+00:00
[2022-02-25 03:29:20,569] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.005 seconds
[2022-02-25 03:34:20,731] {processor.py:163} INFO - Started process (PID=12088) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:20,732] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:34:20,732] {logging_mixin.py:109} INFO - [2022-02-25 03:34:20,732] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:20,749] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:34:21,757] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:21,783] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:34:21,785] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:34:21,792] {logging_mixin.py:109} INFO - [2022-02-25 03:34:21,792] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:34:21,806] {logging_mixin.py:109} INFO - [2022-02-25 03:34:21,806] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:34:06.806269+00:00
[2022-02-25 03:34:21,817] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.088 seconds
[2022-02-25 03:34:56,273] {processor.py:163} INFO - Started process (PID=12101) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:56,273] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:34:56,274] {logging_mixin.py:109} INFO - [2022-02-25 03:34:56,274] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:56,300] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:34:57,250] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:34:57,276] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:34:57,279] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:34:57,286] {logging_mixin.py:109} INFO - [2022-02-25 03:34:57,286] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:34:57,306] {logging_mixin.py:109} INFO - [2022-02-25 03:34:57,306] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:34:42.306069+00:00
[2022-02-25 03:34:57,321] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.048 seconds
[2022-02-25 03:35:38,603] {processor.py:163} INFO - Started process (PID=12148) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:35:38,605] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:35:38,605] {logging_mixin.py:109} INFO - [2022-02-25 03:35:38,605] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:35:38,642] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:35:39,928] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:35:39,998] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:35:40,021] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:35:40,034] {logging_mixin.py:109} INFO - [2022-02-25 03:35:40,033] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:35:40,054] {logging_mixin.py:109} INFO - [2022-02-25 03:35:40,054] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:35:25.054018+00:00
[2022-02-25 03:35:40,075] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.473 seconds
[2022-02-25 03:36:24,143] {processor.py:163} INFO - Started process (PID=12183) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:36:24,143] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:36:24,144] {logging_mixin.py:109} INFO - [2022-02-25 03:36:24,144] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:36:24,160] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:36:24,833] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:36:24,851] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:36:24,855] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:36:24,866] {logging_mixin.py:109} INFO - [2022-02-25 03:36:24,866] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:36:24,881] {logging_mixin.py:109} INFO - [2022-02-25 03:36:24,881] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:36:09.880948+00:00
[2022-02-25 03:36:24,898] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.756 seconds
[2022-02-25 03:37:10,367] {processor.py:163} INFO - Started process (PID=12204) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:37:10,368] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:37:10,368] {logging_mixin.py:109} INFO - [2022-02-25 03:37:10,368] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:37:10,382] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:37:11,123] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:37:11,144] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:37:11,157] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:37:11,172] {logging_mixin.py:109} INFO - [2022-02-25 03:37:11,172] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:37:11,196] {logging_mixin.py:109} INFO - [2022-02-25 03:37:11,195] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:36:56.195618+00:00
[2022-02-25 03:37:11,217] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.851 seconds
[2022-02-25 03:38:09,910] {processor.py:163} INFO - Started process (PID=12223) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:38:09,910] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:38:09,911] {logging_mixin.py:109} INFO - [2022-02-25 03:38:09,911] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:38:09,940] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:38:12,567] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:38:12,767] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:38:12,809] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:38:12,840] {logging_mixin.py:109} INFO - [2022-02-25 03:38:12,839] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:38:12,945] {logging_mixin.py:109} INFO - [2022-02-25 03:38:12,945] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:37:57.944976+00:00
[2022-02-25 03:38:12,985] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 3.077 seconds
[2022-02-25 03:39:04,059] {processor.py:163} INFO - Started process (PID=12253) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:04,060] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:39:04,060] {logging_mixin.py:109} INFO - [2022-02-25 03:39:04,060] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:04,079] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:39:04,876] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:04,897] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:39:04,900] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:39:04,909] {logging_mixin.py:109} INFO - [2022-02-25 03:39:04,909] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:39:04,928] {logging_mixin.py:109} INFO - [2022-02-25 03:39:04,928] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:38:49.927723+00:00
[2022-02-25 03:39:04,941] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.883 seconds
[2022-02-25 03:39:25,426] {processor.py:163} INFO - Started process (PID=12265) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:25,426] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:39:25,427] {logging_mixin.py:109} INFO - [2022-02-25 03:39:25,427] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:25,442] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:39:26,112] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:39:26,132] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:39:26,134] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:39:26,141] {logging_mixin.py:109} INFO - [2022-02-25 03:39:26,141] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:39:26,158] {logging_mixin.py:109} INFO - [2022-02-25 03:39:26,158] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:39:11.158279+00:00
[2022-02-25 03:39:26,172] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.747 seconds
[2022-02-25 03:40:14,849] {processor.py:163} INFO - Started process (PID=12282) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:14,849] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:40:14,854] {logging_mixin.py:109} INFO - [2022-02-25 03:40:14,854] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:14,873] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:40:15,574] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:15,593] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:40:15,595] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:40:15,604] {logging_mixin.py:109} INFO - [2022-02-25 03:40:15,604] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:40:15,621] {logging_mixin.py:109} INFO - [2022-02-25 03:40:15,621] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:40:00.621106+00:00
[2022-02-25 03:40:15,631] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.783 seconds
[2022-02-25 03:40:49,130] {processor.py:163} INFO - Started process (PID=12291) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:49,130] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:40:49,131] {logging_mixin.py:109} INFO - [2022-02-25 03:40:49,131] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:49,154] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:40:50,151] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:40:50,177] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:40:50,179] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:40:50,188] {logging_mixin.py:109} INFO - [2022-02-25 03:40:50,187] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:40:50,208] {logging_mixin.py:109} INFO - [2022-02-25 03:40:50,207] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:40:35.207762+00:00
[2022-02-25 03:40:50,225] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.096 seconds
[2022-02-25 03:41:23,076] {processor.py:163} INFO - Started process (PID=12297) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:23,076] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:41:23,077] {logging_mixin.py:109} INFO - [2022-02-25 03:41:23,077] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:23,096] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:41:24,034] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:24,066] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:41:24,068] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:41:24,077] {logging_mixin.py:109} INFO - [2022-02-25 03:41:24,077] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:41:24,091] {logging_mixin.py:109} INFO - [2022-02-25 03:41:24,091] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:41:09.091713+00:00
[2022-02-25 03:41:24,104] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.029 seconds
[2022-02-25 03:41:57,868] {processor.py:163} INFO - Started process (PID=12301) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:57,869] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:41:57,882] {logging_mixin.py:109} INFO - [2022-02-25 03:41:57,882] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:57,937] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:41:59,347] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:41:59,370] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:41:59,372] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:41:59,381] {logging_mixin.py:109} INFO - [2022-02-25 03:41:59,381] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:41:59,400] {logging_mixin.py:109} INFO - [2022-02-25 03:41:59,400] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:41:44.400056+00:00
[2022-02-25 03:41:59,420] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.553 seconds
[2022-02-25 03:42:25,575] {processor.py:163} INFO - Started process (PID=12305) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:42:25,576] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:42:25,577] {logging_mixin.py:109} INFO - [2022-02-25 03:42:25,577] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:42:25,607] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:42:27,043] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:42:27,083] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:42:27,088] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:42:27,106] {logging_mixin.py:109} INFO - [2022-02-25 03:42:27,105] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:42:27,140] {logging_mixin.py:109} INFO - [2022-02-25 03:42:27,140] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:42:12.140080+00:00
[2022-02-25 03:42:27,170] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.595 seconds
[2022-02-25 03:43:14,933] {processor.py:163} INFO - Started process (PID=12332) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:43:14,934] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:43:14,935] {logging_mixin.py:109} INFO - [2022-02-25 03:43:14,935] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:43:14,954] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:43:16,202] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:43:16,265] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:43:16,270] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:43:16,290] {logging_mixin.py:109} INFO - [2022-02-25 03:43:16,289] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:43:16,351] {logging_mixin.py:109} INFO - [2022-02-25 03:43:16,350] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:43:01.350040+00:00
[2022-02-25 03:43:16,375] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.442 seconds
[2022-02-25 03:44:08,144] {processor.py:163} INFO - Started process (PID=12362) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:08,145] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:44:08,145] {logging_mixin.py:109} INFO - [2022-02-25 03:44:08,145] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:08,166] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:44:09,001] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:09,033] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:44:09,036] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:44:09,051] {logging_mixin.py:109} INFO - [2022-02-25 03:44:09,050] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:44:09,085] {logging_mixin.py:109} INFO - [2022-02-25 03:44:09,085] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:43:54.084986+00:00
[2022-02-25 03:44:09,113] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.970 seconds
[2022-02-25 03:44:42,285] {processor.py:163} INFO - Started process (PID=12366) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:42,285] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:44:42,286] {logging_mixin.py:109} INFO - [2022-02-25 03:44:42,286] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:42,311] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:44:43,336] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:44:43,371] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:44:43,375] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:44:43,392] {logging_mixin.py:109} INFO - [2022-02-25 03:44:43,392] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:44:43,418] {logging_mixin.py:109} INFO - [2022-02-25 03:44:43,418] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:44:28.418238+00:00
[2022-02-25 03:44:43,434] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.150 seconds
[2022-02-25 03:45:16,521] {processor.py:163} INFO - Started process (PID=12369) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:16,521] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:45:16,522] {logging_mixin.py:109} INFO - [2022-02-25 03:45:16,522] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:16,544] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:45:17,568] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:17,595] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:17,598] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:17,613] {logging_mixin.py:109} INFO - [2022-02-25 03:45:17,613] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:45:17,631] {logging_mixin.py:109} INFO - [2022-02-25 03:45:17,631] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:45:02.630966+00:00
[2022-02-25 03:45:17,644] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.124 seconds
[2022-02-25 03:45:51,086] {processor.py:163} INFO - Started process (PID=12372) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:51,086] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:45:51,088] {logging_mixin.py:109} INFO - [2022-02-25 03:45:51,088] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:51,123] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:45:52,204] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:52,247] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:52,251] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:52,262] {logging_mixin.py:109} INFO - [2022-02-25 03:45:52,262] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:45:52,282] {logging_mixin.py:109} INFO - [2022-02-25 03:45:52,282] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:45:37.282478+00:00
[2022-02-25 03:45:52,295] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.209 seconds
[2022-02-25 03:45:56,245] {processor.py:163} INFO - Started process (PID=12375) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:56,245] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:45:56,246] {logging_mixin.py:109} INFO - [2022-02-25 03:45:56,245] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:56,273] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:45:57,203] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:45:57,226] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:57,228] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:45:57,235] {logging_mixin.py:109} INFO - [2022-02-25 03:45:57,234] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:45:57,250] {logging_mixin.py:109} INFO - [2022-02-25 03:45:57,250] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:45:42.250553+00:00
[2022-02-25 03:45:57,267] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.023 seconds
[2022-02-25 03:46:29,980] {processor.py:163} INFO - Started process (PID=12381) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:46:29,981] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:46:29,981] {logging_mixin.py:109} INFO - [2022-02-25 03:46:29,981] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:46:29,995] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:46:30,595] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:46:30,624] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:46:30,627] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:46:30,635] {logging_mixin.py:109} INFO - [2022-02-25 03:46:30,634] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:46:30,652] {logging_mixin.py:109} INFO - [2022-02-25 03:46:30,652] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:46:15.652279+00:00
[2022-02-25 03:46:30,670] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.690 seconds
[2022-02-25 03:47:03,145] {processor.py:163} INFO - Started process (PID=12386) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:03,145] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:47:03,146] {logging_mixin.py:109} INFO - [2022-02-25 03:47:03,146] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:03,166] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:47:03,925] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:03,945] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:47:03,948] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:47:03,960] {logging_mixin.py:109} INFO - [2022-02-25 03:47:03,959] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:47:03,975] {logging_mixin.py:109} INFO - [2022-02-25 03:47:03,975] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:46:48.975397+00:00
[2022-02-25 03:47:03,985] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.841 seconds
[2022-02-25 03:47:36,468] {processor.py:163} INFO - Started process (PID=12389) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:36,468] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:47:36,469] {logging_mixin.py:109} INFO - [2022-02-25 03:47:36,469] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:36,489] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:47:37,402] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:47:37,426] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:47:37,429] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:47:37,435] {logging_mixin.py:109} INFO - [2022-02-25 03:47:37,435] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:47:37,454] {logging_mixin.py:109} INFO - [2022-02-25 03:47:37,454] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:47:22.454633+00:00
[2022-02-25 03:47:37,465] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.998 seconds
[2022-02-25 03:48:10,254] {processor.py:163} INFO - Started process (PID=12401) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:10,255] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:48:10,256] {logging_mixin.py:109} INFO - [2022-02-25 03:48:10,256] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:10,277] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:48:11,224] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:11,245] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:48:11,249] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:48:11,261] {logging_mixin.py:109} INFO - [2022-02-25 03:48:11,260] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:48:11,274] {logging_mixin.py:109} INFO - [2022-02-25 03:48:11,274] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:47:56.274602+00:00
[2022-02-25 03:48:11,284] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.031 seconds
[2022-02-25 03:48:43,799] {processor.py:163} INFO - Started process (PID=12407) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:43,799] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:48:43,800] {logging_mixin.py:109} INFO - [2022-02-25 03:48:43,800] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:43,823] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:48:44,722] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:48:44,743] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:48:44,746] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:48:44,758] {logging_mixin.py:109} INFO - [2022-02-25 03:48:44,758] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:48:44,773] {logging_mixin.py:109} INFO - [2022-02-25 03:48:44,773] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:48:29.773119+00:00
[2022-02-25 03:48:44,784] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.986 seconds
[2022-02-25 03:49:17,487] {processor.py:163} INFO - Started process (PID=12409) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:17,487] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:49:17,488] {logging_mixin.py:109} INFO - [2022-02-25 03:49:17,488] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:17,516] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:49:18,459] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:18,480] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:49:18,482] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:49:18,489] {logging_mixin.py:109} INFO - [2022-02-25 03:49:18,489] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:49:18,510] {logging_mixin.py:109} INFO - [2022-02-25 03:49:18,509] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:49:03.509772+00:00
[2022-02-25 03:49:18,519] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.033 seconds
[2022-02-25 03:49:51,088] {processor.py:163} INFO - Started process (PID=12412) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:51,088] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:49:51,089] {logging_mixin.py:109} INFO - [2022-02-25 03:49:51,089] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:51,124] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:49:52,026] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:49:52,050] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:49:52,053] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:49:52,061] {logging_mixin.py:109} INFO - [2022-02-25 03:49:52,060] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:49:52,074] {logging_mixin.py:109} INFO - [2022-02-25 03:49:52,074] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:49:37.074616+00:00
[2022-02-25 03:49:52,084] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.997 seconds
[2022-02-25 03:50:24,668] {processor.py:163} INFO - Started process (PID=12416) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:24,668] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:50:24,669] {logging_mixin.py:109} INFO - [2022-02-25 03:50:24,669] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:24,689] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:50:25,608] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:25,629] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:50:25,632] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:50:25,638] {logging_mixin.py:109} INFO - [2022-02-25 03:50:25,638] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:50:25,655] {logging_mixin.py:109} INFO - [2022-02-25 03:50:25,655] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:50:10.655364+00:00
[2022-02-25 03:50:25,667] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.999 seconds
[2022-02-25 03:50:58,202] {processor.py:163} INFO - Started process (PID=12420) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:58,202] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:50:58,203] {logging_mixin.py:109} INFO - [2022-02-25 03:50:58,203] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:58,245] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:50:59,164] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:50:59,184] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:50:59,187] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:50:59,194] {logging_mixin.py:109} INFO - [2022-02-25 03:50:59,194] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:50:59,217] {logging_mixin.py:109} INFO - [2022-02-25 03:50:59,217] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:50:44.216916+00:00
[2022-02-25 03:50:59,227] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.026 seconds
[2022-02-25 03:51:31,913] {processor.py:163} INFO - Started process (PID=12425) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:51:31,913] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:51:31,914] {logging_mixin.py:109} INFO - [2022-02-25 03:51:31,914] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:51:31,936] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:51:32,940] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:51:32,967] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:51:32,969] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:51:32,976] {logging_mixin.py:109} INFO - [2022-02-25 03:51:32,976] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:51:32,992] {logging_mixin.py:109} INFO - [2022-02-25 03:51:32,991] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:51:17.991835+00:00
[2022-02-25 03:51:33,004] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.092 seconds
[2022-02-25 03:52:06,666] {processor.py:163} INFO - Started process (PID=12435) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:06,667] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:52:06,667] {logging_mixin.py:109} INFO - [2022-02-25 03:52:06,667] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:06,690] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:52:07,698] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:07,728] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:52:07,730] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:52:07,738] {logging_mixin.py:109} INFO - [2022-02-25 03:52:07,738] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:52:07,754] {logging_mixin.py:109} INFO - [2022-02-25 03:52:07,754] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:51:52.753886+00:00
[2022-02-25 03:52:07,768] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.102 seconds
[2022-02-25 03:52:40,235] {processor.py:163} INFO - Started process (PID=12443) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:40,235] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:52:40,236] {logging_mixin.py:109} INFO - [2022-02-25 03:52:40,236] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:40,257] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:52:40,849] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:52:40,871] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:52:40,874] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:52:40,880] {logging_mixin.py:109} INFO - [2022-02-25 03:52:40,880] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:52:40,895] {logging_mixin.py:109} INFO - [2022-02-25 03:52:40,895] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:52:25.895241+00:00
[2022-02-25 03:52:40,908] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.674 seconds
[2022-02-25 03:53:13,154] {processor.py:163} INFO - Started process (PID=12446) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:13,154] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:53:13,155] {logging_mixin.py:109} INFO - [2022-02-25 03:53:13,155] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:13,170] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:53:13,926] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:13,948] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:53:13,952] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:53:13,961] {logging_mixin.py:109} INFO - [2022-02-25 03:53:13,961] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:53:13,975] {logging_mixin.py:109} INFO - [2022-02-25 03:53:13,975] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:52:58.974908+00:00
[2022-02-25 03:53:13,987] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.834 seconds
[2022-02-25 03:53:46,210] {processor.py:163} INFO - Started process (PID=12453) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:46,210] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:53:46,211] {logging_mixin.py:109} INFO - [2022-02-25 03:53:46,211] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:46,225] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:53:46,969] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:53:46,998] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:53:47,002] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:53:47,010] {logging_mixin.py:109} INFO - [2022-02-25 03:53:47,010] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:53:47,024] {logging_mixin.py:109} INFO - [2022-02-25 03:53:47,024] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:53:32.024009+00:00
[2022-02-25 03:53:47,034] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.824 seconds
[2022-02-25 03:54:19,928] {processor.py:163} INFO - Started process (PID=12458) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:19,928] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:54:19,929] {logging_mixin.py:109} INFO - [2022-02-25 03:54:19,929] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:19,964] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:54:21,008] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:21,038] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:54:21,041] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:54:21,048] {logging_mixin.py:109} INFO - [2022-02-25 03:54:21,048] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:54:21,062] {logging_mixin.py:109} INFO - [2022-02-25 03:54:21,062] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:54:06.061963+00:00
[2022-02-25 03:54:21,071] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.144 seconds
[2022-02-25 03:54:24,976] {processor.py:163} INFO - Started process (PID=12461) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:24,976] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:54:24,977] {logging_mixin.py:109} INFO - [2022-02-25 03:54:24,977] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:25,001] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:54:26,225] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:54:26,295] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:54:26,308] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:54:26,327] {logging_mixin.py:109} INFO - [2022-02-25 03:54:26,326] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:54:26,385] {logging_mixin.py:109} INFO - [2022-02-25 03:54:26,384] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:54:11.383548+00:00
[2022-02-25 03:54:26,426] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.451 seconds
[2022-02-25 03:55:02,974] {processor.py:163} INFO - Started process (PID=12471) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:02,975] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:55:02,975] {logging_mixin.py:109} INFO - [2022-02-25 03:55:02,975] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:02,996] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:55:04,114] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:04,150] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:55:04,156] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:55:04,610] {logging_mixin.py:109} INFO - [2022-02-25 03:55:04,610] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:55:04,618] {logging_mixin.py:109} INFO - [2022-02-25 03:55:04,618] {dag.py:2417} INFO - Creating ORM DAG for Spotify_Song_dag
[2022-02-25 03:55:04,626] {logging_mixin.py:109} INFO - [2022-02-25 03:55:04,626] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:54:49.626573+00:00
[2022-02-25 03:55:04,648] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.675 seconds
[2022-02-25 03:55:25,014] {processor.py:163} INFO - Started process (PID=12483) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:25,022] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:55:25,023] {logging_mixin.py:109} INFO - [2022-02-25 03:55:25,023] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:25,054] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:55:26,289] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:55:26,307] {logging_mixin.py:109} INFO - [2022-02-25 03:55:26,307] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:55:26,319] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:55:26,323] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:55:26,356] {logging_mixin.py:109} INFO - [2022-02-25 03:55:26,355] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:55:11.354726+00:00
[2022-02-25 03:55:26,382] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.369 seconds
[2022-02-25 03:56:09,190] {processor.py:163} INFO - Started process (PID=12487) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:09,191] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:56:09,192] {logging_mixin.py:109} INFO - [2022-02-25 03:56:09,192] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:09,236] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:56:12,545] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:12,585] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:56:12,606] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:56:12,643] {logging_mixin.py:109} INFO - [2022-02-25 03:56:12,643] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:56:12,669] {logging_mixin.py:109} INFO - [2022-02-25 03:56:12,668] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:55:57.668704+00:00
[2022-02-25 03:56:12,693] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 3.504 seconds
[2022-02-25 03:56:52,382] {processor.py:163} INFO - Started process (PID=12503) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:52,383] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:56:52,383] {logging_mixin.py:109} INFO - [2022-02-25 03:56:52,383] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:52,401] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:56:52,976] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:56:53,009] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:56:53,015] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:56:53,024] {logging_mixin.py:109} INFO - [2022-02-25 03:56:53,024] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:56:53,047] {logging_mixin.py:109} INFO - [2022-02-25 03:56:53,047] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:56:38.047356+00:00
[2022-02-25 03:56:53,059] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.677 seconds
[2022-02-25 03:57:25,668] {processor.py:163} INFO - Started process (PID=12520) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:57:25,668] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:57:25,670] {logging_mixin.py:109} INFO - [2022-02-25 03:57:25,670] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:57:25,688] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:57:26,604] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:57:26,642] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:57:26,653] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:57:26,670] {logging_mixin.py:109} INFO - [2022-02-25 03:57:26,670] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:57:26,706] {logging_mixin.py:109} INFO - [2022-02-25 03:57:26,706] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:57:11.706533+00:00
[2022-02-25 03:57:26,728] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.062 seconds
[2022-02-25 03:58:00,012] {processor.py:163} INFO - Started process (PID=12524) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:00,013] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:58:00,013] {logging_mixin.py:109} INFO - [2022-02-25 03:58:00,013] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:00,039] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:58:01,908] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:02,027] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:58:02,032] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:58:02,060] {logging_mixin.py:109} INFO - [2022-02-25 03:58:02,060] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:58:02,088] {logging_mixin.py:109} INFO - [2022-02-25 03:58:02,088] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:57:47.087824+00:00
[2022-02-25 03:58:02,111] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.099 seconds
[2022-02-25 03:58:34,758] {processor.py:163} INFO - Started process (PID=12533) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:34,759] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:58:34,759] {logging_mixin.py:109} INFO - [2022-02-25 03:58:34,759] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:34,779] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:58:35,664] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:58:35,684] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:58:35,687] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:58:35,699] {logging_mixin.py:109} INFO - [2022-02-25 03:58:35,699] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:58:35,716] {logging_mixin.py:109} INFO - [2022-02-25 03:58:35,716] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:58:20.716683+00:00
[2022-02-25 03:58:35,726] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.968 seconds
[2022-02-25 03:59:11,754] {processor.py:163} INFO - Started process (PID=12535) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:11,757] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:59:11,758] {logging_mixin.py:109} INFO - [2022-02-25 03:59:11,758] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:11,839] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:59:13,725] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:13,747] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:59:13,750] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:59:13,757] {logging_mixin.py:109} INFO - [2022-02-25 03:59:13,757] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:59:13,772] {logging_mixin.py:109} INFO - [2022-02-25 03:59:13,772] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:58:58.772128+00:00
[2022-02-25 03:59:13,784] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.032 seconds
[2022-02-25 03:59:46,775] {processor.py:163} INFO - Started process (PID=12547) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:46,776] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 03:59:46,776] {logging_mixin.py:109} INFO - [2022-02-25 03:59:46,776] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:46,801] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 03:59:47,780] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 03:59:47,806] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:59:47,809] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 03:59:47,815] {logging_mixin.py:109} INFO - [2022-02-25 03:59:47,815] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 03:59:47,829] {logging_mixin.py:109} INFO - [2022-02-25 03:59:47,829] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T03:59:32.829686+00:00
[2022-02-25 03:59:47,843] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.068 seconds
[2022-02-25 04:00:22,448] {processor.py:163} INFO - Started process (PID=12549) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:22,448] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:00:22,449] {logging_mixin.py:109} INFO - [2022-02-25 04:00:22,449] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:22,475] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:00:24,098] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:24,132] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:00:24,136] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:00:24,147] {logging_mixin.py:109} INFO - [2022-02-25 04:00:24,147] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:00:24,170] {logging_mixin.py:109} INFO - [2022-02-25 04:00:24,170] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:00:09.170500+00:00
[2022-02-25 04:00:24,188] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.741 seconds
[2022-02-25 04:00:31,366] {processor.py:163} INFO - Started process (PID=12552) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:31,366] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:00:31,367] {logging_mixin.py:109} INFO - [2022-02-25 04:00:31,367] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:31,400] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:00:32,822] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:00:32,869] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:00:32,874] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:00:32,886] {logging_mixin.py:109} INFO - [2022-02-25 04:00:32,885] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:00:32,913] {logging_mixin.py:109} INFO - [2022-02-25 04:00:32,913] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:00:17.913423+00:00
[2022-02-25 04:00:32,980] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.615 seconds
[2022-02-25 04:01:07,917] {processor.py:163} INFO - Started process (PID=12557) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:07,917] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:01:07,918] {logging_mixin.py:109} INFO - [2022-02-25 04:01:07,918] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:07,941] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:01:08,942] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:08,967] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:01:08,969] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:01:08,976] {logging_mixin.py:109} INFO - [2022-02-25 04:01:08,975] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:01:08,991] {logging_mixin.py:109} INFO - [2022-02-25 04:01:08,991] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:00:53.991452+00:00
[2022-02-25 04:01:09,004] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.088 seconds
[2022-02-25 04:01:42,856] {processor.py:163} INFO - Started process (PID=12566) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:42,857] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:01:42,857] {logging_mixin.py:109} INFO - [2022-02-25 04:01:42,857] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:42,889] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:01:44,311] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:01:44,334] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:01:44,337] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:01:44,348] {logging_mixin.py:109} INFO - [2022-02-25 04:01:44,348] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:01:44,363] {logging_mixin.py:109} INFO - [2022-02-25 04:01:44,363] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:01:29.363209+00:00
[2022-02-25 04:01:44,376] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.520 seconds
[2022-02-25 04:02:30,565] {processor.py:163} INFO - Started process (PID=12583) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:02:30,566] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:02:30,566] {logging_mixin.py:109} INFO - [2022-02-25 04:02:30,566] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:02:30,588] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:02:31,642] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:02:31,683] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:02:31,688] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:02:31,706] {logging_mixin.py:109} INFO - [2022-02-25 04:02:31,706] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:02:31,728] {logging_mixin.py:109} INFO - [2022-02-25 04:02:31,728] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:02:16.727904+00:00
[2022-02-25 04:02:31,740] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.176 seconds
[2022-02-25 04:03:14,573] {processor.py:163} INFO - Started process (PID=12601) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:14,573] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:03:14,574] {logging_mixin.py:109} INFO - [2022-02-25 04:03:14,574] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:14,603] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:03:16,526] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:16,632] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:03:16,638] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:03:16,654] {logging_mixin.py:109} INFO - [2022-02-25 04:03:16,654] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:03:16,669] {logging_mixin.py:109} INFO - [2022-02-25 04:03:16,669] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:03:01.669319+00:00
[2022-02-25 04:03:16,694] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.122 seconds
[2022-02-25 04:03:51,395] {processor.py:163} INFO - Started process (PID=12613) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:51,396] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:03:51,398] {logging_mixin.py:109} INFO - [2022-02-25 04:03:51,397] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:51,459] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:03:52,615] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:52,644] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:03:52,647] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:03:52,657] {logging_mixin.py:109} INFO - [2022-02-25 04:03:52,657] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:03:52,681] {logging_mixin.py:109} INFO - [2022-02-25 04:03:52,681] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:03:37.681155+00:00
[2022-02-25 04:03:52,702] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.308 seconds
[2022-02-25 04:03:58,522] {processor.py:163} INFO - Started process (PID=12615) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:58,522] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:03:58,523] {logging_mixin.py:109} INFO - [2022-02-25 04:03:58,523] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:03:58,555] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:04:01,053] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:04:01,098] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:04:01,103] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:04:01,114] {logging_mixin.py:109} INFO - [2022-02-25 04:04:01,113] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:04:01,350] {logging_mixin.py:109} INFO - [2022-02-25 04:04:01,349] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:03:46.349502+00:00
[2022-02-25 04:04:01,385] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.864 seconds
[2022-02-25 04:04:57,901] {processor.py:163} INFO - Started process (PID=12647) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:04:57,902] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:04:57,903] {logging_mixin.py:109} INFO - [2022-02-25 04:04:57,903] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:04:57,929] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:04:59,214] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:04:59,265] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:04:59,269] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:04:59,287] {logging_mixin.py:109} INFO - [2022-02-25 04:04:59,286] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:04:59,331] {logging_mixin.py:109} INFO - [2022-02-25 04:04:59,331] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:04:44.331348+00:00
[2022-02-25 04:04:59,367] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.467 seconds
[2022-02-25 04:05:44,546] {processor.py:163} INFO - Started process (PID=12676) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:05:44,546] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:05:44,548] {logging_mixin.py:109} INFO - [2022-02-25 04:05:44,548] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:05:44,565] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:05:45,318] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:05:45,394] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:05:45,405] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:05:45,422] {logging_mixin.py:109} INFO - [2022-02-25 04:05:45,422] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:05:45,462] {logging_mixin.py:109} INFO - [2022-02-25 04:05:45,462] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:05:30.462526+00:00
[2022-02-25 04:05:45,497] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.953 seconds
[2022-02-25 04:05:58,715] {processor.py:163} INFO - Started process (PID=12678) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:05:58,716] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:05:58,716] {logging_mixin.py:109} INFO - [2022-02-25 04:05:58,716] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:05:58,749] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:06:00,266] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:06:00,309] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:06:00,313] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:06:00,326] {logging_mixin.py:109} INFO - [2022-02-25 04:06:00,326] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:06:00,493] {logging_mixin.py:109} INFO - [2022-02-25 04:06:00,493] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:05:45.492881+00:00
[2022-02-25 04:06:00,516] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.801 seconds
[2022-02-25 04:06:42,224] {processor.py:163} INFO - Started process (PID=12706) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:06:42,224] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:06:42,225] {logging_mixin.py:109} INFO - [2022-02-25 04:06:42,225] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:06:42,242] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:06:42,789] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:06:42,810] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:06:42,812] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:06:42,819] {logging_mixin.py:109} INFO - [2022-02-25 04:06:42,819] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:06:42,834] {logging_mixin.py:109} INFO - [2022-02-25 04:06:42,834] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:06:27.834533+00:00
[2022-02-25 04:06:42,855] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.631 seconds
[2022-02-25 04:07:29,562] {processor.py:163} INFO - Started process (PID=12727) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:07:29,562] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:07:29,562] {logging_mixin.py:109} INFO - [2022-02-25 04:07:29,562] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:07:29,592] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:07:30,470] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:07:30,498] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:07:30,502] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:07:30,510] {logging_mixin.py:109} INFO - [2022-02-25 04:07:30,510] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:07:30,524] {logging_mixin.py:109} INFO - [2022-02-25 04:07:30,524] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:07:15.524718+00:00
[2022-02-25 04:07:30,538] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.977 seconds
[2022-02-25 04:08:09,203] {processor.py:163} INFO - Started process (PID=12757) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:09,203] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:08:09,204] {logging_mixin.py:109} INFO - [2022-02-25 04:08:09,204] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:09,218] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:08:09,773] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:09,797] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:08:09,800] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:08:09,810] {logging_mixin.py:109} INFO - [2022-02-25 04:08:09,808] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:08:09,836] {logging_mixin.py:109} INFO - [2022-02-25 04:08:09,836] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:07:54.835840+00:00
[2022-02-25 04:08:09,858] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.656 seconds
[2022-02-25 04:08:57,121] {processor.py:163} INFO - Started process (PID=12777) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:57,121] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:08:57,122] {logging_mixin.py:109} INFO - [2022-02-25 04:08:57,122] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:57,145] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:08:57,773] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:08:57,804] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:08:57,807] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:08:57,815] {logging_mixin.py:109} INFO - [2022-02-25 04:08:57,815] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:08:57,834] {logging_mixin.py:109} INFO - [2022-02-25 04:08:57,833] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:08:42.833544+00:00
[2022-02-25 04:08:57,856] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.736 seconds
[2022-02-25 04:09:32,970] {processor.py:163} INFO - Started process (PID=12781) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:09:32,971] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:09:32,972] {logging_mixin.py:109} INFO - [2022-02-25 04:09:32,972] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:09:33,002] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:09:35,745] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:09:35,811] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:09:35,813] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:09:35,824] {logging_mixin.py:109} INFO - [2022-02-25 04:09:35,824] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:09:35,846] {logging_mixin.py:109} INFO - [2022-02-25 04:09:35,846] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:09:20.846569+00:00
[2022-02-25 04:09:35,861] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 2.892 seconds
[2022-02-25 04:10:09,663] {processor.py:163} INFO - Started process (PID=12789) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:09,663] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:10:09,664] {logging_mixin.py:109} INFO - [2022-02-25 04:10:09,664] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:09,686] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:10:10,623] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:10,650] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:10:10,652] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:10:10,659] {logging_mixin.py:109} INFO - [2022-02-25 04:10:10,659] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:10:10,675] {logging_mixin.py:109} INFO - [2022-02-25 04:10:10,675] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:09:55.675601+00:00
[2022-02-25 04:10:10,689] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.027 seconds
[2022-02-25 04:10:27,232] {processor.py:163} INFO - Started process (PID=12790) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:27,233] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:10:27,234] {logging_mixin.py:109} INFO - [2022-02-25 04:10:27,233] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:27,296] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:10:28,814] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:10:28,847] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:10:28,850] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:10:28,862] {logging_mixin.py:109} INFO - [2022-02-25 04:10:28,861] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:10:28,882] {logging_mixin.py:109} INFO - [2022-02-25 04:10:28,882] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:10:13.882717+00:00
[2022-02-25 04:10:28,900] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.670 seconds
[2022-02-25 04:11:05,417] {processor.py:163} INFO - Started process (PID=12796) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:05,419] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:11:05,421] {logging_mixin.py:109} INFO - [2022-02-25 04:11:05,421] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:05,458] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:11:06,868] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:06,897] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:11:06,901] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:11:06,913] {logging_mixin.py:109} INFO - [2022-02-25 04:11:06,913] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:11:06,969] {logging_mixin.py:109} INFO - [2022-02-25 04:11:06,969] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:10:51.968766+00:00
[2022-02-25 04:11:07,035] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.618 seconds
[2022-02-25 04:11:46,611] {processor.py:163} INFO - Started process (PID=12816) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:46,611] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:11:46,612] {logging_mixin.py:109} INFO - [2022-02-25 04:11:46,612] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:46,635] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:11:47,823] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:11:47,935] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:11:47,957] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:11:47,987] {logging_mixin.py:109} INFO - [2022-02-25 04:11:47,987] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:11:48,025] {logging_mixin.py:109} INFO - [2022-02-25 04:11:48,025] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:11:33.025558+00:00
[2022-02-25 04:11:48,062] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.452 seconds
[2022-02-25 04:12:45,405] {processor.py:163} INFO - Started process (PID=12852) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:12:45,410] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:12:45,411] {logging_mixin.py:109} INFO - [2022-02-25 04:12:45,411] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:12:45,443] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:12:46,554] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:12:46,589] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:12:46,592] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:12:46,601] {logging_mixin.py:109} INFO - [2022-02-25 04:12:46,601] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:12:46,624] {logging_mixin.py:109} INFO - [2022-02-25 04:12:46,624] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:12:31.624591+00:00
[2022-02-25 04:12:46,647] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.243 seconds
[2022-02-25 04:13:26,835] {processor.py:163} INFO - Started process (PID=12866) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:13:26,835] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:13:26,836] {logging_mixin.py:109} INFO - [2022-02-25 04:13:26,836] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:13:26,852] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:13:27,575] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:13:27,599] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:13:27,609] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:13:27,659] {logging_mixin.py:109} INFO - [2022-02-25 04:13:27,659] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:13:27,795] {logging_mixin.py:109} INFO - [2022-02-25 04:13:27,794] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:13:12.794646+00:00
[2022-02-25 04:13:27,861] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.026 seconds
[2022-02-25 04:14:04,868] {processor.py:163} INFO - Started process (PID=12884) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:04,868] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:14:04,868] {logging_mixin.py:109} INFO - [2022-02-25 04:14:04,868] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:04,885] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:14:05,417] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:05,443] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:14:05,445] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:14:05,453] {logging_mixin.py:109} INFO - [2022-02-25 04:14:05,453] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:14:05,472] {logging_mixin.py:109} INFO - [2022-02-25 04:14:05,472] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:13:50.472181+00:00
[2022-02-25 04:14:05,493] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.626 seconds
[2022-02-25 04:14:39,072] {processor.py:163} INFO - Started process (PID=12899) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:39,072] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:14:39,073] {logging_mixin.py:109} INFO - [2022-02-25 04:14:39,073] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:39,093] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:14:39,870] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:14:39,941] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:14:39,945] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:14:39,953] {logging_mixin.py:109} INFO - [2022-02-25 04:14:39,953] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:14:39,971] {logging_mixin.py:109} INFO - [2022-02-25 04:14:39,971] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:14:24.971327+00:00
[2022-02-25 04:14:39,998] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.927 seconds
[2022-02-25 04:15:21,939] {processor.py:163} INFO - Started process (PID=12914) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:15:21,939] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:15:21,940] {logging_mixin.py:109} INFO - [2022-02-25 04:15:21,940] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:15:21,962] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:15:23,095] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:15:23,126] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:15:23,130] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:15:23,143] {logging_mixin.py:109} INFO - [2022-02-25 04:15:23,143] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:15:23,168] {logging_mixin.py:109} INFO - [2022-02-25 04:15:23,168] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:15:08.168622+00:00
[2022-02-25 04:15:23,186] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 1.248 seconds
[2022-02-25 04:16:06,563] {processor.py:163} INFO - Started process (PID=12927) to work on /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:16:06,563] {processor.py:642} INFO - Processing file /Users/user/oneplace/dags/spotify_check_dag.py for tasks to queue
[2022-02-25 04:16:06,564] {logging_mixin.py:109} INFO - [2022-02-25 04:16:06,564] {dagbag.py:500} INFO - Filling up the DagBag from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:16:06,581] {logging_mixin.py:109} INFO - 31c46elir35wdgopjjfnkfilf4ba
[2022-02-25 04:16:07,392] {processor.py:654} INFO - DAG(s) dict_keys(['Spotify_Song_dag']) retrieved from /Users/user/oneplace/dags/spotify_check_dag.py
[2022-02-25 04:16:07,420] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'DagRun.serialized_dag' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:16:07,424] {logging_mixin.py:109} WARNING - /Users/user/oneplace/opVM/lib/python3.9/site-packages/sqlalchemy/orm/relationships.py:3435 SAWarning: relationship 'SerializedDagModel.dag_runs' will copy column serialized_dag.dag_id to column dag_run.dag_id, which conflicts with relationship(s): 'BaseXCom.dag_run' (copies xcom.dag_id to dag_run.dag_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   The 'overlaps' parameter may be used to remove this warning.
[2022-02-25 04:16:07,450] {logging_mixin.py:109} INFO - [2022-02-25 04:16:07,449] {dag.py:2398} INFO - Sync 1 DAGs
[2022-02-25 04:16:07,471] {logging_mixin.py:109} INFO - [2022-02-25 04:16:07,470] {dag.py:2937} INFO - Setting next_dagrun for Spotify_Song_dag to 2022-02-25T04:15:52.470784+00:00
[2022-02-25 04:16:07,494] {processor.py:171} INFO - Processing /Users/user/oneplace/dags/spotify_check_dag.py took 0.933 seconds
